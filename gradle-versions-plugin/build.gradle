plugins {
  id 'org.jetbrains.kotlin.jvm'
  id 'org.jetbrains.dokka'
  id 'org.jlleitschuh.gradle.ktlint'
  id 'com.gradle.plugin-publish'
  id 'maven-publish' // For publishing the plugin to mavenLocal()
  id 'java-gradle-plugin'
  id 'java-library'
  id 'groovy'
}

group = GROUP
version = VERSION_NAME

// Write the plugin's classpath to a file to share with the tests
tasks.register('createClasspathManifest') {
  def outputDir = file("$buildDir/$name")

  inputs.files sourceSets.main.runtimeClasspath
  outputs.dir outputDir

  doLast {
    outputDir.mkdirs()
    file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
  }
}

dependencies {
  compileOnly gradleApi()

  implementation localGroovy()
  implementation 'org.jetbrains.kotlin:kotlin-stdlib:2.0.0'
  implementation 'org.jetbrains.kotlin:kotlin-reflect:2.0.0'
  implementation 'com.squareup.okhttp3:okhttp:4.12.0'
  implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'

  testRuntimeOnly files(createClasspathManifest)

  testImplementation localGroovy()
  testImplementation gradleTestKit()
  testImplementation 'org.spockframework:spock-junit4:2.1-M2-groovy-3.0', { exclude module: 'groovy-all' } // Use localGroovy()
}

gradlePlugin {
  website = POM_URL
  vcsUrl = POM_SCM_URL
  plugins {
    versionsPlugin {
      id = PLUGIN_NAME
      implementationClass = PLUGIN_NAME_CLASS
      displayName = POM_NAME
      description = POM_DESCRIPTION
      tags.set(['dependencies', 'versions', 'updates'])
    }
  }
}
