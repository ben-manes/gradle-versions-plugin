plugins {
  id 'com.jfrog.bintray' version '1.8.5'
  id 'java-gradle-plugin'
  id 'maven-publish'
  id 'groovy'
  id 'codenarc'
}

repositories {
  jcenter()
}

group = 'com.github.ben-manes'
version = '0.36.0'

sourceCompatibility = '1.8'

buildScan {
  termsOfServiceUrl = 'https://gradle.com/terms-of-service'
  termsOfServiceAgree = 'yes'
}

tasks.wrapper {
  distributionType 'all'
}

codenarcMain {
  configFile = file('config/codenarc/rules.groovy')
}

codenarcTest {
  configFile = file('config/codenarc/testrules.groovy')
}

tasks.withType(CodeNarc) { codeNarcTask ->
  codeNarcTask.ignoreFailures = true
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
  def outputDir = file("$buildDir/$name")

  inputs.files sourceSets.main.runtimeClasspath
  outputs.dir outputDir

  doLast {
    outputDir.mkdirs()
    file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
  }
}

// Add the classpath file to the test runtime classpath
dependencies {
  implementation gradleApi()
  implementation 'com.thoughtworks.xstream:xstream:1.4.14'

  testRuntimeOnly files(createClasspathManifest)

  testImplementation gradleTestKit()
  testImplementation('org.spockframework:spock-core:1.3-groovy-2.5') {
    exclude(module: 'groovy-all')
  }
}

jar {
  manifest {
    attributes(
      'Implementation-Title': 'Gradle Versions plugin',
      'Implementation-Version': archiveVersion,
      'Built-By': System.getProperty('user.name'),
      'Built-JDK': System.getProperty('java.version'),
      'Built-Gradle': gradle.gradleVersion
    )
  }
}

tasks.withType(Test) {
  maxParallelForks Runtime.getRuntime().availableProcessors()

  testLogging {
    events "passed", "failed", "skipped"
    showStandardStreams true
    exceptionFormat "full"
  }
}

task docsJar(type: Jar, dependsOn: groovydoc) {
  group = 'Publications'
  description = 'Create jar of documentation.'
  archiveClassifier = 'docs'
  from groovydoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
  group = 'Publications'
  description = 'Create jar of sources.'
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

task testsJar(type: Jar) {
  group = 'Publications'
  description = 'Create jar of tests.'
  archiveClassifier = 'tests'
  from sourceSets.test.output
}

task reportsZip(type: Zip, dependsOn: check) {
  group = 'Publications'
  description = 'Create a zip of all reports.'
  archiveClassifier = 'reports'
  from reporting.baseDir
}

// Local published to ~/.m2 - mavenLocal()
publishing {
  repositories {
    mavenLocal()
  }

  publications {
    pluginMaven(MavenPublication) {
      artifact docsJar
      artifact sourcesJar
      artifact testsJar
      artifact reportsZip

      pom {
        resolveStrategy = Closure.DELEGATE_FIRST
        name = 'Gradle Versions plugin'
        description = 'Gradle plugin that provides tasks for discovering dependency updates.'
        url = 'https://github.com/ben-manes/gradle-versions-plugin'
        inceptionYear = '2012'

        licenses {
          license {
            name = 'The Apache Software License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution = 'repo'
          }
        }

        developers {
          developer {
            id = 'ben-manes'
            name = 'Ben Manes'
            email = 'ben.manes@gmail.com'
          }
          developer {
            id = 'zenedith'
            name = 'Zenedith'
            email = 'zenedith@wp.pl'
          }
          developer {
            id = 'jochenberger'
            name = 'Jochen Berger'
          }
        }

        issueManagement {
          system = 'github'
          url = 'https://github.com/ben-manes/gradle-versions-plugin/issues'
        }

        scm {
          url = 'https://github.com/ben-manes/gradle-versions-plugin'
          connection = 'scm:https://ben-manes@github.com/ben-manes/gradle-versions-plugin.git'
          developerConnection = 'scm:git://github.com/ben-manes/gradle-versions-plugin.git'
        }
      }
    }
  }
}
publish.dependsOn jar, docsJar, sourcesJar, testsJar, reportsZip
publish.dependsOn 'generatePomFileForPluginMavenPublication'

// Publishes to JFrog Bintray's JCenter repository
bintray {
  user = project.properties['BINTRAY_USERNAME'] ?: System.env.'BINTRAY_USERNAME'
  key = project.properties['BINTRAY_API_KEY'] ?: System.env.'BINTRAY_API_KEY'
  configurations = ['archives']
  publish = true

  pkg {
    repo = 'maven'
    name = 'com.github.ben-manes:gradle-versions-plugin'
    desc = 'Gradle plugin that provides tasks for discovering dependency updates.'
    websiteUrl = 'https://github.com/ben-manes/gradle-versions-plugin'
    issueTrackerUrl = 'https://github.com/ben-manes/gradle-versions-plugin/issues'
    vcsUrl = 'https://github.com/ben-manes/gradle-versions-plugin'
    labels = ['gradle', 'plugin', 'versions']
    githubRepo = 'ben-manes/gradle-versions-plugin'
    githubReleaseNotesFile = 'README.md'

    version {
      desc = 'Gradle plugin that provides tasks for discovering dependency updates.'
      attributes = ['gradle-plugin': 'com.github.ben-manes.versions:com.github.ben-manes:gradle-versions-plugin']
    }
  }
}
bintrayUpload.dependsOn jar, docsJar, sourcesJar, testsJar, reportsZip
bintrayUpload.dependsOn 'generatePomFileForPluginMavenPublication'
